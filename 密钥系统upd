--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = string.char;
local v1 = string.byte;
local v2 = string.sub;
local v3 = bit32 or bit;
local v4 = v3.bxor;
local v5 = table.concat;
local v6 = table.insert;
local function v7(v24, v25)
	local v26 = {};
	for v41 = 1, #v24 do
		v6(v26, v0(v4(v1(v2(v24, v41, v41 + 1)), v1(v2(v25, 1 + (v41 % #v25), 1 + (v41 % #v25) + 1))) % 256));
	end
	return v5(v26);
end
local v8 = tonumber;
local v9 = string.byte;
local v10 = string.char;
local v11 = string.sub;
local v12 = string.gsub;
local v13 = string.rep;
local v14 = table.concat;
local v15 = table.insert;
local v16 = math.ldexp;
local v17 = getfenv or function()
	return _ENV;
end;
local v18 = setmetatable;
local v19 = pcall;
local v20 = select;
local v21 = unpack or table.unpack;
local v22 = tonumber;
local function v23(v27, v28, ...)
	local v29 = 2 - 1;
	local v30;
	v27 = v12(v11(v27, 5), v7("\189\94", "\41\147\112\19\215"), function(v42)
		if (v9(v42, 2) == 81) then
			local v103 = 0;
			while true do
				if (v103 == 0) then
					v30 = v8(v11(v42, 1, 2 - 1));
					return "";
				end
			end
		else
			local v104 = v10(v8(v42, 16));
			if v30 then
				local v110 = 0;
				local v111;
				while true do
					if (v110 == 1) then
						return v111;
					end
					if (v110 == 0) then
						v111 = v13(v104, v30);
						v30 = nil;
						v110 = 1;
					end
				end
			else
				return v104;
			end
		end
	end);
	local function v31(v43, v44, v45)
		if v45 then
			local v105 = 0;
			local v106;
			while true do
				if (v105 == 0) then
					v106 = (v43 / (2 ^ (v44 - 1))) % (2 ^ (((v45 - 1) - (v44 - 1)) + 1));
					return v106 - (v106 % 1);
				end
			end
		else
			local v107 = 2 ^ (v44 - 1);
			return (((v43 % (v107 + v107)) >= v107) and 1) or 0;
		end
	end
	local function v32()
		local v46 = 0;
		local v47;
		while true do
			if (v46 == 0) then
				v47 = v9(v27, v29, v29);
				v29 = v29 + 1;
				v46 = 1;
			end
			if (v46 == 1) then
				return v47;
			end
		end
	end
	local function v33()
		local v48 = 0;
		local v49;
		local v50;
		while true do
			if (v48 == 0) then
				v49, v50 = v9(v27, v29, v29 + 2);
				v29 = v29 + 2;
				v48 = 1;
			end
			if (v48 == 1) then
				return (v50 * 256) + v49;
			end
		end
	end
	local function v34()
		local v51 = 0;
		local v52;
		local v53;
		local v54;
		local v55;
		while true do
			if (1 == v51) then
				return (v55 * 16777216) + (v54 * 65536) + (v53 * (659 - 403)) + v52;
			end
			if (v51 == 0) then
				v52, v53, v54, v55 = v9(v27, v29, v29 + 3);
				v29 = v29 + (7 - 3);
				v51 = 1;
			end
		end
	end
	local function v35()
		local v56 = 0;
		local v57;
		local v58;
		local v59;
		local v60;
		local v61;
		local v62;
		while true do
			if (v56 == 0) then
				v57 = v34();
				v58 = v34();
				v56 = 1;
			end
			if (1 == v56) then
				v59 = 1;
				v60 = (v31(v58, 1, 20) * (2 ^ 32)) + v57;
				v56 = 2;
			end
			if (v56 == 2) then
				v61 = v31(v58, 21, 31);
				v62 = ((v31(v58, 32) == 1) and -1) or 1;
				v56 = 3;
			end
			if (v56 == 3) then
				if (v61 == 0) then
					if (v60 == 0) then
						return v62 * 0;
					else
						v61 = 1;
						v59 = 0;
					end
				elseif (v61 == 2047) then
					return ((v60 == 0) and (v62 * (1 / 0))) or (v62 * NaN);
				end
				return v16(v62, v61 - 1023) * (v59 + (v60 / (2 ^ 52)));
			end
		end
	end
	local function v36(v63)
		local v64 = 0;
		local v65;
		local v66;
		while true do
			if (v64 == 2) then
				v66 = {};
				for v112 = 1, #v65 do
					v66[v112] = v10(v9(v11(v65, v112, v112)));
				end
				v64 = 3;
			end
			if (v64 == 1) then
				v65 = v11(v27, v29, (v29 + v63) - 1);
				v29 = v29 + v63;
				v64 = 2;
			end
			if (v64 == 0) then
				v65 = nil;
				if not v63 then
					v63 = v34();
					if (v63 == 0) then
						return "";
					end
				end
				v64 = 1;
			end
			if (v64 == 3) then
				return v14(v66);
			end
		end
	end
	local v37 = v34;
	local function v38(...)
		return {...}, v20("#", ...);
	end
	local function v39()
		local v67 = {};
		local v68 = {};
		local v69 = {};
		local v70 = {v67,v68,nil,v69};
		local v71 = v34();
		local v72 = {};
		for v80 = 1, v71 do
			local v81 = 0;
			local v82;
			local v83;
			while true do
				if (v81 == 0) then
					v82 = v32();
					v83 = nil;
					v81 = 1;
				end
				if (v81 == 1) then
					if (v82 == 1) then
						v83 = v32() ~= 0;
					elseif (v82 == 2) then
						v83 = v35();
					elseif (v82 == 3) then
						v83 = v36();
					end
					v72[v80] = v83;
					break;
				end
			end
		end
		v70[3] = v32();
		for v84 = 1, v34() do
			local v85 = 0;
			local v86;
			while true do
				if (v85 == 0) then
					v86 = v32();
					if (v31(v86, 1, 1) == 0) then
						local v121 = 0;
						local v122;
						local v123;
						local v124;
						while true do
							if (v121 == 3) then
								if (v31(v123, 3, 1 + 2) == 1) then
									v124[4] = v72[v124[4]];
								end
								v67[v84] = v124;
								break;
							end
							if (v121 == 0) then
								v122 = v31(v86, 2, 3);
								v123 = v31(v86, 4, 6);
								v121 = 1;
							end
							if (v121 == 2) then
								if (v31(v123, 569 - (367 + 201), 1) == 1) then
									v124[2] = v72[v124[2]];
								end
								if (v31(v123, 2, 929 - (214 + 713)) == 1) then
									v124[3] = v72[v124[3]];
								end
								v121 = 3;
							end
							if (v121 == 1) then
								v124 = {v33(),v33(),nil,nil};
								if (v122 == 0) then
									v124[3] = v33();
									v124[4] = v33();
								elseif (v122 == 1) then
									v124[3] = v34();
								elseif (v122 == 2) then
									v124[3] = v34() - (2 ^ 16);
								elseif (v122 == 3) then
									local v177 = 0;
									while true do
										if (v177 == 0) then
											v124[3] = v34() - (2 ^ 16);
											v124[4] = v33();
											break;
										end
									end
								end
								v121 = 2;
							end
						end
					end
					break;
				end
			end
		end
		for v87 = 1, v34() do
			v68[v87 - (1 + 0)] = v39();
		end
		return v70;
	end
	local function v40(v74, v75, v76)
		local v77 = v74[1];
		local v78 = v74[2];
		local v79 = v74[3];
		return function(...)
			local v89 = v77;
			local v90 = v78;
			local v91 = v79;
			local v92 = v38;
			local v93 = 1;
			local v94 = -1;
			local v95 = {};
			local v96 = {...};
			local v97 = v20("#", ...) - 1;
			local v98 = {};
			local v99 = {};
			for v108 = 0, v97 do
				if (v108 >= v91) then
					v95[v108 - v91] = v96[v108 + 1];
				else
					v99[v108] = v96[v108 + 1];
				end
			end
			local v100 = (v97 - v91) + 1;
			local v101;
			local v102;
			while true do
				local v109 = 0;
				while true do
					if (v109 == 1) then
						if (v102 <= 25) then
							if (v102 <= 12) then
								if (v102 <= 5) then
									if (v102 <= 2) then
										if (v102 <= (877 - (282 + 595))) then
											do
												return v99[v101[2]]();
											end
										elseif (v102 == 1) then
											local v178;
											local v179;
											v99[v101[2]] = v76[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[1639 - (1523 + 114)]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v179 = v101[2];
											v99[v179] = v99[v179](v21(v99, v179 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v76[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3 + 0];
											v93 = v93 + (1 - 0);
											v101 = v89[v93];
											v179 = v101[2];
											v99[v179] = v99[v179](v21(v99, v179 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v76[v101[1068 - (68 + 997)]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[1273 - (226 + 1044)]][v101[4]];
											v93 = v93 + (4 - 3);
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[121 - (32 + 85)];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2 + 0]] = v76[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[1 + 1]] = v101[960 - (892 + 65)];
											v93 = v93 + (2 - 1);
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v179 = v101[2];
											v99[v179] = v99[v179](v21(v99, v179 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[3 - 1]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[4];
											v93 = v93 + (1 - 0);
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[354 - (87 + 263)];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v75[v101[183 - (67 + 113)]];
											v93 = v93 + 1 + 0;
											v101 = v89[v93];
											v99[v101[2]] = v101[7 - 4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3 + 0];
											v93 = v93 + 1;
											v101 = v89[v93];
											v179 = v101[2];
											v99[v179] = v99[v179](v21(v99, v179 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[11 - 8]] = v99[v101[956 - (802 + 150)]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[10 - 6]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v76[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v179 = v101[2];
											v99[v179] = v99[v179](v21(v99, v179 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[6 - 2];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v76[v101[3]];
											v93 = v93 + 1 + 0;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v179 = v101[2];
											v99[v179] = v99[v179](v21(v99, v179 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[999 - (915 + 82)]] = v76[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + (2 - 1);
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[2 + 1];
											v93 = v93 + (1 - 0);
											v101 = v89[v93];
											v99[v101[2]] = v101[1190 - (1069 + 118)];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + (2 - 1);
											v101 = v89[v93];
											v179 = v101[2];
											v99[v179] = v99[v179](v21(v99, v179 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v76[v101[6 - 3]];
											v93 = v93 + 1 + 0;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[3 - 1]] = v99[v101[3]][v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3 + 0]] = v101[4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v76[v101[3]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[795 - (368 + 423)]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[9 - 6];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[20 - (10 + 8)]] = v101[3];
											v93 = v93 + 1;
											v101 = v89[v93];
											v179 = v101[2];
											v99[v179] = v99[v179](v21(v99, v179 + 1, v101[3]));
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v99[v101[4]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[7 - 5]][v101[3]] = v101[4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[446 - (416 + 26)];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]][v101[3]] = v101[4];
											v93 = v93 + 1;
											v101 = v89[v93];
											v99[v101[2]] = v99[v101[3]][v101[12 - 8]];
											v93 = v93 + 1;
											v101 = v89[v93];
											v179 = v101[2];
											v178 = v99[v101[3]];
											v99[v179 + 1] = v178;
											v99[v179] = v178[v101[4]];
										else
											local v221 = 0;
											local v222;
											local v223;
											local v224;
											local v225;
											while true do
												if (2 == v221) then
													for v704 = v222, v94 do
														local v705 = 0;
														while true do
															if (0 == v705) then
																v225 = v225 + 1;
																v99[v704] = v223[v225];
																break;
															end
														end
													end
													break;
												end
												if (v221 == 0) then
													v222 = v101[2];
													v223, v224 = v92(v99[v222](v21(v99, v222 + 1, v101[3])));
													v221 = 1;
												end
												if (1 == v221) then
													v94 = (v224 + v222) - (1 + 0);
													v225 = 0 - 0;
													v221 = 2;
												end
											end
										end
									elseif (v102 <= 3) then
										if (v101[2] == v99[v101[4]]) then
											v93 = v93 + (439 - (145 + 293));
										else
											v93 = v101[3];
										end
									elseif (v102 == 4) then
										local v227 = 0;
										local v228;
										local v229;
										local v230;
										local v231;
										while true do
											if (1 == v227) then
												v94 = (v230 + v228) - 1;
												v231 = 0;
												v227 = 2;
											end
											if (v227 == 0) then
												v228 = v101[2];
												v229, v230 = v92(v99[v228](v21(v99, v228 + 1, v94)));
												v227 = 1;
											end
											if (v227 == 2) then
												for v706 = v228, v94 do
													local v707 = 0;
													while true do
														if (v707 == 0) then
															v231 = v231 + 1;
															v99[v706] = v229[v231];
															break;
														end
													end
												end
												break;
											end
										end
									else
										v99[v101[2]] = v75[v101[3]];
									end
								elseif (v102 <= 8) then
									if (v102 <= 6) then
										local v136 = 0;
										local v137;
										local v138;
										local v139;
										local v140;
										while true do
											if (v136 == 0) then
												v137 = v101[2];
												v138, v139 = v92(v99[v137](v99[v137 + 1]));
												v136 = 1;
											end
											if (v136 == 1) then
												v94 = (v139 + v137) - (431 - (44 + 386));
												v140 = 0;
												v136 = 2;
											end
											if (v136 == 2) then
												for v375 = v137, v94 do
													v140 = v140 + 1;
													v99[v375] = v138[v140];
												end
												break;
											end
										end
									elseif (v102 > 7) then
										local v234 = v101[1488 - (998 + 488)];
										do
											return v99[v234](v21(v99, v234 + 1, v101[3]));
										end
									elseif (v99[v101[2]] == v99[v101[4]]) then
										v93 = v93 + 1;
									else
										v93 = v101[3];
									end
								elseif (v102 <= 10) then
									if (v102 == 9) then
										local v235 = v101[1 + 1];
										v99[v235] = v99[v235](v21(v99, v235 + 1, v94));
									else
										for v361 = v101[2], v101[3] do
											v99[v361] = nil;
										end
									end
								elseif (v102 == 11) then
									local v237 = 0;
									local v238;
									while true do
										if (v237 == 0) then
											v238 = v101[2];
											v99[v238](v21(v99, v238 + 1, v94));
											break;
										end
									end
								else
									do
										return;
									end
								end
							elseif (v102 <= 18) then
								if (v102 <= 15) then
									if (v102 <= 13) then
										v99[v101[2]] = v99[v101[3]] % v101[4 + 0];
									elseif (v102 == 14) then
										v99[v101[2]][v99[v101[3]]] = v99[v101[4]];
									else
										local v241 = 0;
										local v242;
										local v243;
										while true do
											if (v241 == 1) then
												for v708 = 1, #v98 do
													local v709 = v98[v708];
													for v749 = 0, #v709 do
														local v750 = 0;
														local v751;
														local v752;
														local v753;
														while true do
															if (v750 == 0) then
																v751 = v709[v749];
																v752 = v751[773 - (201 + 571)];
																v750 = 1;
															end
															if (v750 == 1) then
																v753 = v751[2];
																if ((v752 == v99) and (v753 >= v242)) then
																	local v780 = 0;
																	while true do
																		if (v780 == 0) then
																			v243[v753] = v752[v753];
																			v751[1] = v243;
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
												end
												break;
											end
											if (v241 == 0) then
												v242 = v101[2];
												v243 = {};
												v241 = 1;
											end
										end
									end
								elseif (v102 <= 16) then
									local v142 = v90[v101[3]];
									local v143;
									local v144 = {};
									v143 = v18({}, {[v7("\63\178\2\43\11\20\193", "\59\96\237\107\69\111\113\185")]=function(v166, v167)
										local v168 = v144[v167];
										return v168[1][v168[2]];
									end,[v7("\41\147\239\52\231\19\42\18\169\249", "\68\118\204\129\81\144\122")]=function(v169, v170, v171)
										local v172 = v144[v170];
										v172[1][v172[2]] = v171;
									end});
									for v174 = 1, v101[4] do
										v93 = v93 + 1;
										local v175 = v89[v93];
										if (v175[1] == 24) then
											v144[v174 - 1] = {v99,v175[3]};
										else
											v144[v174 - 1] = {v75,v175[3]};
										end
										v98[#v98 + 1] = v144;
									end
									v99[v101[2]] = v40(v142, v143, v76);
								elseif (v102 > (1155 - (116 + 1022))) then
									v93 = v101[3];
								elseif (v99[v101[2]] == v101[4]) then
									v93 = v93 + 1;
								else
									v93 = v101[3];
								end
							elseif (v102 <= 21) then
								if (v102 <= (78 - 59)) then
									local v146 = v101[2];
									do
										return v21(v99, v146, v94);
									end
								elseif (v102 > 20) then
									v99[v101[2]] = v99[v101[3]] % v99[v101[4]];
								else
									local v246 = 0;
									local v247;
									local v248;
									while true do
										if (v246 == 1) then
											for v710 = v247 + 1, v101[4] do
												v248 = v248 .. v99[v710];
											end
											v99[v101[2]] = v248;
											break;
										end
										if (v246 == 0) then
											v247 = v101[3];
											v248 = v99[v247];
											v246 = 1;
										end
									end
								end
							elseif (v102 <= 23) then
								if (v102 == (13 + 9)) then
									local v249;
									v99[v101[2]][v101[10 - 7]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v76[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + (3 - 2);
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v249 = v101[2];
									v99[v249] = v99[v249](v21(v99, v249 + (860 - (814 + 45)), v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[4 - 2]][v101[3]] = v101[4];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v101[4];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v76[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[1 + 2];
									v93 = v93 + 1 + 0;
									v101 = v89[v93];
									v99[v101[2]] = v101[888 - (261 + 624)];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[4 - 1];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v249 = v101[2];
									v99[v249] = v99[v249](v21(v99, v249 + (1081 - (1020 + 60)), v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v76[v101[1426 - (630 + 793)]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[9 - 6]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + (4 - 3);
									v101 = v89[v93];
									v99[v101[1 + 1]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + (3 - 2);
									v101 = v89[v93];
									v249 = v101[2];
									v99[v249] = v99[v249](v21(v99, v249 + (1748 - (760 + 987)), v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v76[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[1916 - (1789 + 124)]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v101[4];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v76[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[768 - (745 + 21)]] = v99[v101[2 + 1]][v101[10 - 6]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[7 - 5]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[1 + 2];
									v93 = v93 + 1 + 0;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v249 = v101[2];
									v99[v249] = v99[v249](v21(v99, v249 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v101[4];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v101[4];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v101[1059 - (87 + 968)];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[17 - 13]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2 + 0]] = v76[v101[3]];
									v93 = v93 + (2 - 1);
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[1416 - (447 + 966)]][v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[8 - 5];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v249 = v101[2];
									v99[v249] = v99[v249](v21(v99, v249 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[1821 - (1703 + 114)]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v101[4];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v76[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[704 - (376 + 325)]][v101[4]];
									v93 = v93 + (1 - 0);
									v101 = v89[v93];
									v99[v101[2]] = v101[8 - 5];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v249 = v101[2];
									v99[v249] = v99[v249](v21(v99, v249 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[1 + 2]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v76[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[4]];
									v93 = v93 + (2 - 1);
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[17 - (9 + 5)];
									v93 = v93 + (377 - (85 + 291));
									v101 = v89[v93];
									v249 = v101[2];
									v99[v249] = v99[v249](v21(v99, v249 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v75[v101[3]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v101[3];
									v93 = v93 + 1;
									v101 = v89[v93];
									v249 = v101[2];
									v99[v249] = v99[v249](v21(v99, v249 + 1, v101[3]));
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]][v101[3]] = v99[v101[4]];
									v93 = v93 + 1;
									v101 = v89[v93];
									v99[v101[2]] = v76[v101[3]];
									v93 = v93 + (1266 - (243 + 1022));
									v101 = v89[v93];
									v99[v101[2]] = v99[v101[3]][v101[14 - 10]];
									v93 = v93 + 1;
						
